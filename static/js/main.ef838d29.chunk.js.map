{"version":3,"sources":["components/habit.jsx","components/habitAddForm.jsx","components/habits.jsx","components/navBar.jsx","app.jsx","index.js"],"names":["Habit","handleIncrement","props","onIncrement","habit","handleDecrement","onDecrement","handleDelete","onDelete","console","log","this","name","count","className","onClick","PureComponent","HabitAddForm","memo","formRef","React","createRef","inputRef","ref","onSubmit","event","preventDefault","current","value","onAdd","reset","type","placeholder","Habits","habits","map","id","onReset","Component","NavBar","totalCount","App","state","item","setState","filter","handleAdd","Date","now","handleReset","length","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kQAoDeA,E,4MAvCbC,gBAAkB,WAChB,EAAKC,MAAMC,YAAY,EAAKD,MAAME,Q,EAEpCC,gBAAkB,WAChB,EAAKH,MAAMI,YAAY,EAAKJ,MAAME,Q,EAEpCG,aAAe,WACb,EAAKL,MAAMM,SAAS,EAAKN,MAAME,Q,uDAjBjC,WAEEK,QAAQC,IAAR,gBAAqBC,KAAKT,MAAME,MAAMQ,KAAtC,e,kCAGF,WAEEH,QAAQC,IAAR,gBAAqBC,KAAKT,MAAME,MAAMQ,KAAtC,oB,oBAaF,WAAU,IAAD,EACiBD,KAAKT,MAAME,MAA3BQ,EADD,EACCA,KAAMC,EADP,EACOA,MACd,OACE,qBAAIC,UAAU,QAAd,UACE,sBAAMA,UAAU,aAAhB,SAA8BF,IAC9B,sBAAME,UAAU,cAAhB,SAA+BD,IAC/B,wBACEC,UAAU,8BACVC,QAASJ,KAAKV,gBAFhB,SAIE,mBAAGa,UAAU,yBAEf,wBACEA,UAAU,8BACVC,QAASJ,KAAKN,gBAFhB,SAIE,mBAAGS,UAAU,0BAEf,wBACEA,UAAU,4BACVC,QAASJ,KAAKJ,aAFhB,SAIE,mBAAGO,UAAU,0B,GA3CHE,iBC2BLC,EAzBMC,gBAAK,SAAChB,GACzB,IAAMiB,EAAUC,IAAMC,YAChBC,EAAWF,IAAMC,YASvB,OAEE,cADA,CACA,QAAME,IAAKJ,EAASL,UAAU,WAAWU,SAT1B,SAACC,GAChBA,EAAMC,iBACN,IAAMd,EAAOU,EAASK,QAAQC,MAC9BhB,GAAQV,EAAM2B,MAAMjB,GACpBO,EAAQQ,QAAQG,SAKhB,UACE,uBACEP,IAAKD,EACLS,KAAK,OACLjB,UAAU,YACVkB,YAAY,4BAEd,wBAAQlB,UAAU,aAAlB,uBCKSmB,E,4JAvBb,WAAU,IAAD,OACP,OACE,qCACE,cAAC,EAAD,CAAcJ,MAAOlB,KAAKT,MAAM2B,QAChC,6BACGlB,KAAKT,MAAMgC,OAAOC,KAAI,SAAC/B,GAAD,OACrB,cAAC,EAAD,CAEEA,MAAOA,EACPD,YAAa,EAAKD,MAAMC,YACxBG,YAAa,EAAKJ,MAAMI,YACxBE,SAAU,EAAKN,MAAMM,UAJhBJ,EAAMgC,SAQjB,wBAAQtB,UAAU,cAAcC,QAASJ,KAAKT,MAAMmC,QAApD,8B,GAhBaC,aCSNC,E,4JAXb,WACE,OACE,sBAAKzB,UAAU,SAAf,UACE,mBAAGA,UAAU,4BACb,iDACA,sBAAMA,UAAU,cAAhB,SAA+BH,KAAKT,MAAMsC,oB,GAN7BxB,iBC4ENyB,E,4MAxEbC,MAAQ,CACNR,OAAQ,CACN,CAAEE,GAAI,EAAGxB,KAAM,UAAWC,MAAO,GACjC,CAAEuB,GAAI,EAAGxB,KAAM,SAAUC,MAAO,GAChC,CAAEuB,GAAI,EAAGxB,KAAM,WAAYC,MAAO,K,EAKtCZ,gBAAkB,SAACG,GAEjB,IAAM8B,EAAS,EAAKQ,MAAMR,OAAOC,KAAI,SAACQ,GAEpC,OAAIA,EAAKP,KAAOhC,EAAMgC,GACb,2BAAKhC,GAAZ,IAAmBS,MAAOT,EAAMS,MAAQ,IAEnC8B,KAET,EAAKC,SAAS,CAAEV,Y,EAGlB7B,gBAAkB,SAACD,GACjB,IAAM8B,EAAS,EAAKQ,MAAMR,OAAOC,KAAI,SAACQ,GACpC,GAAIA,EAAKP,KAAOhC,EAAMgC,GAAI,CACxB,IAAMvB,EAAQT,EAAMS,MAAQ,EAC5B,OAAO,2BAAKT,GAAZ,IAAmBS,MAAOA,EAAQ,EAAI,EAAIA,IAE5C,OAAO8B,KAET,EAAKC,SAAS,CAAEV,Y,EAGlB3B,aAAe,SAACH,GACd,IAAM8B,EAAS,EAAKQ,MAAMR,OAAOW,QAAO,SAACF,GAAD,OAAUA,EAAKP,KAAOhC,EAAMgC,MACpE,EAAKQ,SAAS,CAAEV,Y,EAGlBY,UAAY,SAAClC,GACX,IAAMsB,EAAM,sBAAO,EAAKQ,MAAMR,QAAlB,CAA0B,CAAEE,GAAIW,KAAKC,MAAOpC,OAAMC,MAAO,KACrE,EAAK+B,SAAS,CAAEV,Y,EAGlBe,YAAc,WAEZ,IAAMf,EAAS,EAAKQ,MAAMR,OAAOC,KAAI,SAAC/B,GACpC,OAAoB,IAAhBA,EAAMS,MACD,2BAAKT,GAAZ,IAAmBS,MAAO,IAErBT,KAET,EAAKwC,SAAS,CAAEV,Y,4CAGlB,WACE,OACE,qCACE,cAAC,EAAD,CACEM,WAAY7B,KAAK+B,MAAMR,OAAOW,QAAO,SAACF,GAAD,OAAUA,EAAK9B,MAAQ,KAAGqC,SAEjE,cAAC,EAAD,CACEhB,OAAQvB,KAAK+B,MAAMR,OACnB/B,YAAaQ,KAAKV,gBAClBK,YAAaK,KAAKN,gBAClBG,SAAUG,KAAKJ,aACfsB,MAAOlB,KAAKmC,UACZT,QAAS1B,KAAKsC,qB,GAlENX,aCClBa,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.ef838d29.chunk.js","sourcesContent":["import React, { PureComponent } from 'react'\n\nclass Habit extends PureComponent {\n  componentDidMount() {\n    // 컴포넌트에 아이템이 추가될 때 구현할 내용 기재\n    console.log(`habit ${this.props.habit.name} mounted`)\n  }\n\n  componentWillUnmount() {\n    // 컴포넌트에 아이템이 삭제될 때 구현할 내용 기재\n    console.log(`habit ${this.props.habit.name} will unmount`)\n  }\n\n  handleIncrement = () => {\n    this.props.onIncrement(this.props.habit)\n  }\n  handleDecrement = () => {\n    this.props.onDecrement(this.props.habit)\n  }\n  handleDelete = () => {\n    this.props.onDelete(this.props.habit)\n  }\n\n  render() {\n    const { name, count } = this.props.habit\n    return (\n      <li className=\"habit\">\n        <span className=\"habit-name\">{name}</span>\n        <span className=\"habit-count\">{count}</span>\n        <button\n          className=\"habit-button habit-increase\"\n          onClick={this.handleIncrement}\n        >\n          <i className=\"fas fa-plus-square\"></i>\n        </button>\n        <button\n          className=\"habit-button habit-decrease\"\n          onClick={this.handleDecrement}\n        >\n          <i className=\"fas fa-minus-square\"></i>\n        </button>\n        <button\n          className=\"habit-button habit-delete\"\n          onClick={this.handleDelete}\n        >\n          <i className=\"fas fa-trash\"></i>\n        </button>\n      </li>\n    )\n  }\n}\n\nexport default Habit\n","// PureComponent를 function Component로 만들어보기\nimport React, { memo } from 'react'\n\n// memo는 PureComponent처럼 props가 변경되지 않으면 내부의 함수가 호출되지 않는다\nconst HabitAddForm = memo((props) => {\n  const formRef = React.createRef()\n  const inputRef = React.createRef()\n\n  const onSubmit = (event) => {\n    event.preventDefault()\n    const name = inputRef.current.value\n    name && props.onAdd(name)\n    formRef.current.reset()\n  }\n\n  return (\n    // 함수니까 this 안쓰고 바로 접근 가능\n    <form ref={formRef} className=\"add-form\" onSubmit={onSubmit}>\n      <input\n        ref={inputRef}\n        type=\"text\"\n        className=\"add-input\"\n        placeholder=\"Please enter your habit\"\n      ></input>\n      <button className=\"add-button\">Add</button>\n    </form>\n  )\n})\n\nexport default HabitAddForm\n","import React, { Component } from 'react'\nimport Habit from './habit'\nimport HabitAddform from './habitAddForm'\n\n// 여러가지 습관을 표시한다\nclass Habits extends Component {\n  render() {\n    return (\n      <>\n        <HabitAddform onAdd={this.props.onAdd} />\n        <ul>\n          {this.props.habits.map((habit) => (\n            <Habit\n              key={habit.id}\n              habit={habit}\n              onIncrement={this.props.onIncrement}\n              onDecrement={this.props.onDecrement}\n              onDelete={this.props.onDelete}\n            />\n          ))}\n        </ul>\n        <button className=\"habit-reset\" onClick={this.props.onReset}>\n          Reset All\n        </button>\n      </>\n    )\n  }\n}\n\nexport default Habits\n","import React, { PureComponent } from 'react'\n\nclass NavBar extends PureComponent {\n  render() {\n    return (\n      <nav className=\"navBar\">\n        <i className=\"navBar-logo fas fa-leaf\"></i>\n        <span>Habit Tracker</span>\n        <span className=\"habit-count\">{this.props.totalCount}</span>\n      </nav>\n    )\n  }\n}\n\nexport default NavBar\n","import React, { Component } from 'react'\nimport './app.css'\nimport Habits from './components/habits'\nimport NavBar from './components/navBar'\n\nclass App extends Component {\n  state = {\n    habits: [\n      { id: 1, name: 'Reading', count: 0 },\n      { id: 2, name: 'Coding', count: 0 },\n      { id: 3, name: 'Work out', count: 0 },\n    ],\n  }\n\n  // 데이터 처리\n  handleIncrement = (habit) => {\n    // 렌더 부담을 줄이는 방식\n    const habits = this.state.habits.map((item) => {\n      // 아이템 id 와 habit id가 같은 경우, habit obj를 copy하되, count부분만 바꿔라\n      if (item.id === habit.id) {\n        return { ...habit, count: habit.count + 1 }\n      }\n      return item\n    })\n    this.setState({ habits })\n  }\n\n  handleDecrement = (habit) => {\n    const habits = this.state.habits.map((item) => {\n      if (item.id === habit.id) {\n        const count = habit.count - 1\n        return { ...habit, count: count < 0 ? 0 : count }\n      }\n      return item\n    })\n    this.setState({ habits })\n  }\n\n  handleDelete = (habit) => {\n    const habits = this.state.habits.filter((item) => item.id !== habit.id)\n    this.setState({ habits })\n  }\n\n  handleAdd = (name) => {\n    const habits = [...this.state.habits, { id: Date.now(), name, count: 0 }]\n    this.setState({ habits })\n  }\n\n  handleReset = () => {\n    // habit의 count가 0이 아닐때만 reset하도록 설정 (render최소화 위해)\n    const habits = this.state.habits.map((habit) => {\n      if (habit.count !== 0) {\n        return { ...habit, count: 0 }\n      }\n      return habit\n    })\n    this.setState({ habits })\n  }\n\n  render() {\n    return (\n      <>\n        <NavBar\n          totalCount={this.state.habits.filter((item) => item.count > 0).length}\n        />\n        <Habits\n          habits={this.state.habits}\n          onIncrement={this.handleIncrement}\n          onDecrement={this.handleDecrement}\n          onDelete={this.handleDelete}\n          onAdd={this.handleAdd}\n          onReset={this.handleReset}\n        />\n      </>\n    )\n  }\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport '@fortawesome/fontawesome-free/js/all.js'\nimport App from './app'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}